<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <components>
    <component id="TenantRepository.generalRepository.Generic"
               service="Tar.Repository.General.IGeneralRepository`1,Tar.Repository.General"
               type="Tar.Repository.General.GeneralRepository`1,Tar.Repository.General"
               lifestyle="custom" customLifestyleType="Tar.Core.TarWebRequestLifestyle, Tar.Core">
      <parameters>
        <innerRepositoryKey>TenantRepository.nh</innerRepositoryKey>
      </parameters>
    </component>
    
    <component id="TenantRepository.generalRepository.New"
       type="Tar.Tests.Repository.Multiple.Repository.TenantRepository,Tar.Tests"
      lifestyle="custom" customLifestyleType="Tar.Core.TarWebRequestLifestyle, Tar.Core">
      <parameters>
        <innerRepositoryKey>TenantRepository.generalRepository.Generic</innerRepositoryKey>
      </parameters>
    </component>

    <component id="TenantRepository.nh"
                 service="Tar.Repository.IRepository`1, Tar.Repository"
                 type="Tar.Repository.Nh.Repository`1, Tar.Repository.Nh"
                 lifestyle="custom" customLifestyleType="Tar.Core.TarWebRequestLifestyle, Tar.Core">
      <parameters>
        <sessionHelper>${TenantRepository.nh.sessionHelper}</sessionHelper>
      </parameters>
    </component>
    <component id="TenantRepository.nh.sessionHelper"
               service="Tar.Repository.Nh.ISessionHelper, Tar.Repository.Nh"
               type="Tar.Repository.Nh.SessionHelper, Tar.Repository.Nh"
               lifestyle="custom" customLifestyleType="Tar.Core.TarWebRequestLifestyle, Tar.Core">
      <parameters>
        <configuration>${TenantRepository.nh.repositoryConfiguration}</configuration>
      </parameters>
    </component>

    <component id="TenantRepository.nh.repositoryConfiguration"
               service="Tar.Repository.Nh.INhRepositoryConfiguration, Tar.Repository.Nh"
               type="Tar.Repository.Nh.NhRepositoryConfiguration, Tar.Repository.Nh"
               lifestyle="singleton">
      <parameters>
        <databaseConfiguration>${TenantRepository.nh.databaseConfiguration}</databaseConfiguration>
        <parameters>
          <dictionary>
            <entry key="connection.provider">NHibernate.Connection.DriverConnectionProvider</entry>
            <entry key="dialect">NHibernate.Dialect.MsSql2008Dialect</entry>
            <!--<entry key="dialect">NHibernate.Dialect.MsSqlCeDialect</entry>-->
            <entry key="connection.driver_class">NHibernate.Driver.Sql2008ClientDriver</entry>
            <!--<entry key="connection.driver_class">NHibernate.Driver.SqlServerCeDriver</entry>-->
            <!--<entry key="connection.connection_string">Data Source=.\SQL2012;Database=TestDb;User Id=logper;Password=logper;</entry>-->
            <entry key="connection.connection_string_name">TenantRepository</entry>
            <entry key="show_sql">true</entry>
          </dictionary>
        </parameters>
      </parameters>
    </component>

    <component id="TenantRepository.nh.databaseConfiguration"
           service="Tar.Repository.Nh.INhDatabaseConfiguration,Tar.Repository.Nh"
           type="Tar.Repository.Nh.NhDatabaseConfiguration,Tar.Repository.Nh" lifestyle="singleton">
      <parameters>
        <mappings>
          <dictionary>
            <entry key="Code">
              <list>
                <item>Tar.Tests</item>
              </list>
            </entry>
            <!--<entry key="Xml">
              <list>
                <item>Tar.Tests</item>
              </list>
            </entry>-->
          </dictionary>
        </mappings>
        <scriptFolder>.</scriptFolder>
        <allowChangeSchema>true</allowChangeSchema>
      </parameters>
    </component>
    <component
         service="Tar.Repository.IUnitOfWork, Tar.Repository"
         type="Tar.Repository.Nh.UnitOfWork,Tar.Repository.Nh"
         lifestyle="transient" />
    
    <component id="TenantRepository.Tar.Repository.IUnitOfWorkCounter"
         service="Tar.Repository.IUnitOfWorkCounter, Tar.Repository"
         type="Tar.Repository.UnitOfWorkCounter,Tar.Repository"
         lifestyle="custom" customLifestyleType="Tar.Core.TarWebRequestLifestyle, Tar.Core"/>
  </components>
</configuration>