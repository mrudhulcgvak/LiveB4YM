@using GeneralItemView = Tar.ViewModel.GeneralItemView
@model dynamic
@{
    ViewBag.Title = "Monthly Menu Management";
}
<script src="/Scripts/browser_detect.js" type="text/javascript"></script>
<style>
    #wrap {
        /*width: 1100px;*/
        margin: 0 auto;
    }


    #external-events {
        float: left;
        padding: 0 10px;
        border: 1px solid #ccc;
        background: #eee;
        text-align: left;
        width: 300px;
        height: 600px;
        overflow-y: scroll;
        overflow-x: scroll;
    }

    .chrome #external-events {
        width: 225px;
        height: 500px;
    }

    #external-events h4 {
        font-size: 16px;
        margin-top: 0;
        padding-top: 1em;
    }

    .external-event { /* try to mimick the look of a real event */
        margin: 10px 0;
        padding: 2px 4px;
        background: #3366CC;
        color: #fff;
        font-size: .85em;
        cursor: pointer;
    }

    .label {
        font-weight: bold;
        font-size: 12pt;
        margin: 10px 10px 10px 10px;
    }
    /*#loading
    {
        position: absolute;
        top: 5px;
        right: 5px;
    }*/
</style>

<section id="Meal.Index" class="view">
    <div class="container-fluid">
        <div class="row-fluid">

            <div class="span9">
                @Html.Partial("_MealTypePartial", (IList<Tar.ViewModel.GeneralItemView>)ViewBag.MealTypes)
                <div id='loading' style='display: none'>loading...</div>
                <div id='calendar'></div>
            </div>
            <div class="span3">
                <div id='external-events' class="affix">
                    <h4>Meals</h4>
                    <table>
                        <tr>
                            <td><input class="span2" id="txtSearchMenuName" name="txtSearchMenuName" placeholder="Search Menu" style="width:160px" title="Search Menu" type="text" value=""></td>
                            <td style="vertical-align:top">@Html.BootstrapCustomButton(BootstrapExtensions.ButtonType.Search, "", "button", new { @onclick = "getMenus();" })</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

@section documentReady {

    $(".selectpicker").selectpicker();
    selectDefaultMealType();
}
<script>
    var clicks = 0;

    function changeMealType() {
        getMenus();
        if ($('#calendar').html() == "") {
            $('#calendar').fullCalendar({
                //theme:true,
                //hiddenDays :[0,6],
                weekends: false,
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: ''
                },
                editable: true,
                droppable: true, // this allows things to be dropped onto the calendar !!!
                eventDrop: function (event, dayDelta, minuteDelta, allDay, revertFunc) {
                    var currentDate = $('#calendar').fullCalendar('getDate');
                    var menuDate = event.start;
                    //copiedEventObject._id = tar.toDateString(date, "YYYYMMDD") + "_" + originalEventObject.menuId;
                    event._id = tar.toDateString(menuDate, "YYYYMMDD") + "_" + event.menuId;
                    currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());
                    var endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1);
                    endDate.setDate(endDate.getDate() - 1);

                    if (currentDate.getTime() > menuDate.getTime() || menuDate.getTime() > endDate.getTime())
                        revertFunc();
                },
                drop: function (date, allDay) { // this function is called when something is dropped
                    // retrieve the dropped element's stored Event Object
                    var originalEventObject = $(this).data('eventObject');
                    var filter = tar.toDateString(date, 'YYYYMMDD') + "_" + originalEventObject.menuId;
                    var checkEvents = $('#calendar').fullCalendar('clientEvents', filter);
                    if (checkEvents.length > 0)
                        return;
                    var currentDate = $('#calendar').fullCalendar('getDate');
                    var newDate = date.getTime();
                    var endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1);
                    endDate.setDate(endDate.getDate() - 1);
                    if (currentDate.getTime() > newDate || newDate > endDate.getTime())
                        return;

                    // we need to copy it, so that multiple events don't have a reference to the same object
                    var copiedEventObject = $.extend({}, originalEventObject);

                    // assign it the date that was reported
                    copiedEventObject._id = tar.toDateString(date, "YYYYMMDD") + "_" + originalEventObject.menuId;
                    //copiedEventObject._id= date + "_" + originalEventObject.menuId;
                    //copiedEventObject.start = date;
                    copiedEventObject.start = tar.toDateString(date, "YYYY-MM-DD");
                    copiedEventObject.allDay = allDay;
                    copiedEventObject.editable = true;

                    // render the event on the calendar
                    $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);
                },
                loading: function (bool) {
                    if (bool) tar.showLoading();//$('#loading').show();
                    else tar.hideLoading(); //$('#loading').hide();
                },
                eventClick: function (calEvent, jsEvent, view) {
                    node = $(this);
                    clicks++;
                    if (clicks == 1) {
                        setTimeout(function () {
                            if (clicks == 1) {
                                console.log('single click!');
                            } else {
                                if (calEvent.editable) {
                                    if (IsNull(calEvent.mealMenuId, 0) > 0)
                                        tar.openPopup('Edit', 'Meal', { url: { Id: calEvent.mealMenuId }, label: 'Delete Menu' });
                                    else
                                        $('#calendar').fullCalendar('removeEvents', [calEvent._id]);
                                }
                            }
                            clicks = 0;
                        }, 300);
                    }


                    // change the border color just for fun
                    //$(this).css('border-color', 'red');

                },
                events: function (start, end, callback) {
                    var currentDate = $('#calendar').fullCalendar('getDate');
                    var startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
                    var endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1);
                    endDate.setDate(endDate.getDate() - 1);
                    var callback1 = callback;
                    return tar.callAction(
                            "Meal",
                            "MealMenus",
                            {
                                filter: { StartDate: startDate, EndDate: tar.toDateString(endDate, "YYYY-MM-DD"), MealTypeId: $("#MealTypeId").val() },
                                OrderByAsc: 1, OrderByField: "ValidDate", PageIndex: 1, PageSize: 10000
                            },
                            {
                                success: function (d) {
                                    tar.hideLoading();
                                    if (d.Result != tar.constants.responseResult.Success) alert(d.Message);
                                    else {
                                        $('#calendar').fullCalendar('removeEvents');
                                        var mealMenus = [];
                                        $.each(d.MealMenus, function (index, mealMenu) {
                                            var editable = true;
                                            if (currentDate.getTime() > new Date(tar.toDate(mealMenu.ValidDate)).getTime())
                                                editable = false;
                                            mealMenus.push({
                                                _id: tar.toDateString(mealMenu.ValidDate, "YYYYMMDD") + "_" + mealMenu.Menu.Id,
                                                title: mealMenu.Menu.Name,
                                                //start: tar.toDate(mealMenu.ValidDate, "yyyy-MM-dd"),
                                                start: tar.toDateString(mealMenu.ValidDate, "YYYY-MM-DD"),
                                                mealMenuId: mealMenu.Id,
                                                //validDate:tar.toDateString(mealMenu.ValidDate,"yyyy-MM-dd"),
                                                validDate: tar.toDateString(mealMenu.ValidDate, "YYYY-MM-DD"),
                                                menuId: mealMenu.Menu.Id,
                                                editable: editable
                                            });
                                        });
                                        callback1(mealMenus);
                                    }

                                },
                                complete: function () {
                                    //var rightHtml = "";
                                    var rightHtml = "<input id='btnSaveMounthlyMenu' type='button'class='btn btn-primary btn-small' value='Save Monthly Menu' onclick='return SaveMounthlyMenu();'>";
                                    $(".fc-header-right").html(rightHtml);
                                }
                            });
                }

            });
        }
        else {
            $('#calendar').fullCalendar('refetchEvents');
        }
    }

    function getMenus() {
        tar.showLoading();
        return tar.callAction(
            "Meal",
            "Menus",
            {
                mealTypeId: $("#MealTypeId").val(),
                name: $("#txtSearchMenuName").val()
            },
            {
                async: true,
                success: function (d) {
                    if (d.Result != tar.constants.responseResult.Success) alert(d.Message);
                    else {
                        $("#external-events span").remove();
                        $("#external-events br").remove();
                        $.each(d.Menus, function (i, d) {
                            if (d.MenuType.Value == "Special") {
                                $("#external-events").append("<span class='badge badge-warning' style='cursor:pointer;word-wrap: break-word;' menuid='" + d.Id + "'>" + d.Name + "</span><br />");
                            }
                            else if (d.MenuType.Value == "Lunch Option 1") {
                                $("#external-events").append("<span class='badge badge-danger' style='cursor:pointer;word-wrap: break-word;' menuid='" + d.Id + "'>" + d.Name + "</span><br />");
                            }
                            else if (d.MenuType.Value == "Lunch Option 2") {
                                $("#external-events").append("<span class='badge badge-success' style='cursor:pointer;word-wrap: break-word;' menuid='" + d.Id + "'>" + d.Name + "</span><br />");
                            }
                            else if (d.MenuType.Value == "Singular") {
                                $("#external-events").append("<span class='badge badge-inverse' style='cursor:pointer;word-wrap: break-word;' menuid='" + d.Id + "'>" + d.Name + "</span><br />");
                            }
                            else {
                                $("#external-events").append("<span class='badge badge-info' style='cursor:pointer;word-wrap: break-word;' menuid='" + d.Id + "'>" + d.Name + "</span><br />");
                            }

                        });
                        initializeTheExternalEvents();
                        tar.hideLoading();
                    }
                }
            });
    }


    function initializeTheExternalEvents() {
        /* initialize the external events
		-----------------------------------------------------------------*/

        //$('#external-events div.external-event').each(function () {
        $('#external-events span.badge').each(function () {
            // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
            // it doesn't need to have a start or end
            var eventObject = {
                title: $.trim($(this).text()), // use the element's text as the event title
                menuId: $.trim($(this).attr("menuId")),
                mealMenuId: 0
            };

            // store the Event Object in the DOM element so we can get to it later
            $(this).data('eventObject', eventObject);

            // make the event draggable using jQuery UI
            $(this).draggable({
                zIndex: 999,
                revert: true,      // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag
            });

        });


        /* initialize the calendar
		-----------------------------------------------------------------*/
    }

    function SaveMounthlyMenu() {
        $("#btnSaveMounthlyMenu").attr('disabled', 'disabled');
        var currentDate = $('#calendar').fullCalendar('getDate');
        var startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
        var endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1);
        endDate.setDate(endDate.getDate() - 1);

        var mealMenus = $('#calendar').fullCalendar('clientEvents');
        var postedMealMenus = [];
        $.each(mealMenus, function (index, mealMenu) {
            if (parseInt(mealMenu.mealMenuId, 0) == 0) {
                postedMealMenus.push({ Menu: { Id: mealMenu.menuId }, ValidDate: tar.toDateString(mealMenu.start, "YYYY-MM-DD")});
            }
            else if (tar.toDateString(mealMenu.start, "YYYY-MM-DD") != mealMenu.validDate) {
                postedMealMenus.push({ Id: mealMenu.mealMenuId, Menu: { Id: mealMenu.menuId }, ValidDate: tar.toDateString(mealMenu.start, "YYYY-MM-DD")/*mealMenu.start*/ });
            }
        });

        if (postedMealMenus.length == 0)
            return false;
        return tar.callAction(
            "Meal",
            "SaveMealMenus",
            {
                MealMenus: postedMealMenus,
                mealTypeId: $("#MealTypeId").val()
            },
            {
                success: function (d) {
                    tar.hideLoading();
                    if (d.Result != tar.constants.responseResult.Success) alert(d.Message);
                    else {

                        var mealMenus = [];
                        $.each(d.MealMenus, function (index, mealMenu) {

                            var editable = true;
                            if (currentDate.getTime() > new Date(tar.toDate(mealMenu.ValidDate)).getTime())
                                editable = false;
                            mealMenus.push({
                                _id: tar.toDateString(mealMenu.ValidDate, "YYYYMMDD") + "_" + mealMenu.Menu.Id,
                                title: mealMenu.Menu.Name,
                                start: tar.toDate(mealMenu.ValidDate, "YYYY-MM-DD"),
                                mealMenuId: mealMenu.Id,
                                validDate: tar.toDateString(mealMenu.ValidDate, "YYYY-MM-DD"),
                                menuId: mealMenu.Menu.Id,
                                editable: editable
                            });
                        });

                        $('#calendar').fullCalendar('refetchEvents');
                    }

                },
                complete: function () {
                    $("#btnSaveMounthlyMenu").removeAttr('disabled');
                }
            });

    }

    function deleteAction() {

        return tar.callAction(
            "Meal",
            "Delete",
            {
                Id: $("#Id").val(),
                ModifiedReason: $("#ModifiedReason").val() 
            },
            {
                success: function (d) {
                    tar.hideLoading();
                    if (d.Result != tar.constants.responseResult.Success) alert(d.Message);
                    else {
                        var id = tar.toDateString($("#ValidDate").val(), "YYYYMMDD") + "_" + $("#Menu_Id").val();
                        $('#calendar').fullCalendar('removeEvents', [id]);
                        tar.closePopup();
                    }

                }
            });

    }
</script>
