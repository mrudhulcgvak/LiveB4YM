@model dynamic
@{
    ViewBag.Title = "Build Monthly Menu";
}
<script src='@Url.Content("~/Scripts/browser_detect.js")' type="text/javascript"></script>
<script>
    function _changeMealType(obj) {
        $(obj).parent().children().removeClass("active");
        $(obj).addClass("active");
        $("#MealTypeId").val($(obj).data("id"));
        changeMealType();
    }
    function selectDefaultMealType() {
        $("#btn1")[0].click();
    }
</script>

<style>
    #wrap {
        /*width: 1100px;*/
        margin: 0 auto;
    }


    #external-events {
        float: left;
        padding: 0 10px;
        border: 1px solid #ccc;
        background: #eee;
        text-align: left;
        width: 300px;
        height: 600px;
        overflow-y: scroll;
        overflow-x: scroll;
    }

    .chrome #external-events {
        width: 225px;
        height: 500px;
    }

    #external-events h4 {
        font-size: 16px;
        margin-top: 0;
        padding-top: 1em;
    }

    .external-event { /* try to mimick the look of a real event */
        margin: 10px 0;
        padding: 2px 4px;
        background: #3366CC;
        color: #fff;
        font-size: .85em;
        cursor: pointer;
    }

    .label {
        font-weight: bold;
        font-size: 12pt;
        margin: 10px 10px 10px 10px;
    }

    .fc-event-inner {
        cursor: pointer;
    }
</style>

<!-- start: PAGE HEADER -->
<div class="row">
    <div class="col-sm-12">
        <!-- start: PAGE TITLE & BREADCRUMB -->
            <ol class="breadcrumb">
                 <li>
                    <i class="clip-home-3"></i>
                    @Html.ActionLink("Home","Index","Home")
                </li>
                <li class="active">@ViewBag.Title</li>
            </ol>
        <div class="row page-header">
            <div class="col-sm-6">
                <h1>@ViewBag.Title</h1>
            </div>
        </div>
        <!-- end: PAGE TITLE & BREADCRUMB -->
    </div>
</div>
<!-- end: PAGE HEADER -->

<section class="view">
    <div class="row-fluid">
        <div class="btn-group btn-group-justified btn-group-sm">
            @foreach (var mealType in ViewBag.MealTypes)
            {
                @(TagBuilderCustom.Create("a")
                      .MergeAttribute("onclick", "_changeMealType(this);")
                      .MergeAttribute("id", "btn" + @mealType.Id)
                      .AddCssClass("btn btn-default")
                      .MergeAttribute("data-id", mealType.Id.ToString())
                      .SetInnerHtml(mealType.Text))
            }
        </div>
        <input type="hidden" name="MealTypeId" id="MealTypeId" value="1"/>
        <div id='loading' style='display: none'>loading...</div>
    </div>
    <div class="row-fluid" >
        <div id='calendar'></div>
    </div>
</section>


<script>
    $(function () {
        $(".selectpicker").selectpicker();
        selectDefaultMealType();
    });
    var clicks = 0;
    function changeMealType() {
        if ($('#calendar').html() === "") {
            $('#calendar').fullCalendar({
                //buttonText: {
                //    prev: '<button class="btn btn-default"><i class="fa fa-chevron-left"></i> Previous</button>',
                //    next: '<button class="btn btn-default"> Next <i class="fa fa-chevron-right"></i></button>'
                //},
                buttonText: {
                    prev: '<i class="fa fa-chevron-left"></i> Previous',
                    next: 'Next <i class="fa fa-chevron-right"></i>'
                },
                header: {
                    left: 'prev,today,next',
                    center: 'title',
                    right: ''
                },
                weekends: false,
                editable: false,
                loading: function (bool) {
                    if (bool) tar.showLoading();//$('#loading').show();
                    else tar.hideLoading(); //$('#loading').hide();
                },
                eventClick: function (calEvent/*,jsEvent, view*/) {
                    clicks++;
                    if (clicks === 1) {
                        setTimeout(function () {
                            if (clicks === 1) {
                                console.log('single click!');
                            }
                            else {
                                var menuTypeId = $('.btn.active').data('id');
                                var link = tar.appPath + "Meal/Daily/year/month/day/mealTypeId";
                                link = link.replace("year", calEvent.year);
                                link = link.replace("month", calEvent.month);
                                link = link.replace("day", calEvent.day);
                                link = link.replace("mealTypeId", menuTypeId);
                                tar.redirect(link);
                            }
                            clicks = 0;
                        }, 300);
                    }
                },
                dayRender: function (date, element, view) {
                    element.bind('dblclick', function () {
                        var tmpDate = {
                            year: tar.toDateString(date, "YYYY"),
                            month: tar.toDateString(date, "MM"),
                            day: tar.toDateString(date, "DD")
                        };
                        var menuTypeId = $('.btn.active').data('id');
                        var link = tar.appPath + "Meal/Daily/year/month/day/mealTypeId";
                        link = link.replace("year", tmpDate.year);
                        link = link.replace("month", tmpDate.month);
                        link = link.replace("day", tmpDate.day);
                        link = link.replace("mealTypeId", menuTypeId);
                        tar.redirect(link);
                    });
                },
                events: function (start, end, callback) {
                    var currentDate = $('#calendar').fullCalendar('getDate');
                    var startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
                    var endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1);
                    endDate.setDate(endDate.getDate() - 1);
                    var callback1 = callback;
                    return tar.callAction(
                        "Meal",
                        "MealMenusByType",
                        {
                            filter: { StartDate: startDate, EndDate: tar.toDateString(endDate, "YYYY-MM-DD"), MealTypeId: $("#MealTypeId").val() },
                            OrderByAsc: 1, OrderByField: "ValidDate", PageIndex: 1, PageSize: 10000
                        },
                        {
                            success: function (d) {
                                //tar.hideLoading();
                                var events = [];
                                if (d.Result !== tar.constants.responseResult.Success) alert(d.Message);
                                else {
                                    $('#calendar').fullCalendar('removeEvents');
                                    $.each(d.List, function (index, item) {
                                        var editable = true;
                                        if (currentDate.getTime() > new Date(tar.toDate(item.ValidDate)).getTime())
                                            editable = false;
                                        item.key = (tar.toDateString(item.ValidDate, "YYYYMMDD") + "_" + item.MenuTypeId).toString();
                                        events.push({
                                            key: item.key,
                                            _id: item.key,
                                            title: item.MenuTypeName + " (Count: " + item.Count + ")",
                                            start: tar.toDateString(item.ValidDate, "YYYY-MM-DD"),
                                            validDate: tar.toDateString(item.ValidDate, "YYYY-MM-DD"),
                                            editable: editable,
                                            year: tar.toDateString(item.ValidDate, "YYYY"),
                                            month: tar.toDateString(item.ValidDate, "MM"),
                                            day: tar.toDateString(item.ValidDate, "DD")
                                        });
                                    });
                                    callback1(events);
                                }
                            }
                        });
                }

            });
        }
        else {
            $('#calendar').fullCalendar('refetchEvents');
        }
    }

</script>
